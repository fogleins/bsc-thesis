global:
  # SMTP-beállítások
  smtp_smarthost: "localhost:25"
  smtp_from: "alertmanager@monitoring.spot.internal"

# A legfels(*@ő@*) színt(*@ű@*) útvonal, amibe beérkeznek a riasztások, amiket további
#   'route'-ok definiálásával lehet részletesebben sz(*@ű@*)rni
route:
  # A részletesebb sz(*@ű@*)r(*@ő@*)kre nem illeszked(*@ő@*) értesítéseket megkapó csoport
  receiver: "it-team"

  # Összetartozó riasztások csoportosítása a riasztások minimalizálása érdekében
  group_by: ["alertname", "cluster"]

  # Ennyit várunk egy riasztás megérkezését(*@ő@*)l számítva az értesítés kiküldéséig,
  #     hogy ha több szolgáltatás is érintett, akkor azok egy értesítésbe
  #     csoportosítva kerüljenek kiküldésre
  group_wait: 30s

  # Az els(*@ő@*) riasztást követ(*@ő@*)en ennyit várunk a csoportot érint(*@ő@*) további riasztások
  #     kiküldése el(*@ő@*)tt
  group_interval: 5m

  # Sikeres küldés esetén ennyi ideig nem küldjük újra az értesítéseket
  repeat_interval: 3h

  # Példa egy gyerek útvonalra, mely a kritikus riasztások küldését végzi
  routes:
    - match:
        severity: critical
      receiver: it-team-critical

# Ha egy szolgáltatás már 'critical' állapotban van, akkor a 'warning' állapotra
#   ne küldjön riasztásokat
inhibit_rules:
  - source_match:
      severity: "critical"
    target_match:
      severity: "warning"
    equal: ["alertname"]

# Az értesítéseket megkapó címzettek
receivers:
  - name: "it-team"
    email_configs:
      - to: "root+monitoring@monitoring.spot.internal"
        require_tls: false
        send_resolved: true

  - name: "it-team-critical"
    email_configs:
      - to: "root+monitoring-critical@monitoring.spot.internal"
        require_tls: false
        send_resolved: true
